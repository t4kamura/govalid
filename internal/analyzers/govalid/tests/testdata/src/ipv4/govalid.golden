// Code generated by govalid; DO NOT EDIT.
package ipv4

import (
	"errors"
	"net"

	"github.com/sivchari/govalid"
	govaliderrors "github.com/sivchari/govalid/validation/errors"
)

var (
	// ErrNilIPv4 is returned when the IPv4 is nil.
	ErrNilIPv4 = errors.New("input IPv4 is nil")

	// ErrIPv4ValueIpv4Validation is returned when the Value fails ipv4 validation.
	ErrIPv4ValueIpv4Validation = govaliderrors.ValidationError{Reason: "field Value failed ipv4 validation", Path: "IPv4.Value", Type: "ipv4"}
)

func ValidateIPv4(t *IPv4) error {
	if t == nil {
		return ErrNilIPv4
	}

	var errs govaliderrors.ValidationErrors

	if ip := net.ParseIP(t.Value); ip == nil || ip.To4() == nil {
		err := ErrIPv4ValueIpv4Validation
		err.Value = t.Value
		errs = append(errs, err)
	}

	{
		t := t.Struct

		if ip := net.ParseIP(t.Value); ip == nil || ip.To4() == nil {
			err := ErrIPv4ValueIpv4Validation
			err.Value = t.Value
			errs = append(errs, err)
		}

	}

	if len(errs) > 0 {
		return errs
	}
	return nil
}

var _ govalid.Validator = (*IPv4)(nil)

func (t *IPv4) Validate() error {
	return ValidateIPv4(t)
}
