// Code generated by govalid; DO NOT EDIT.
package ipv6

import (
	"errors"
	"net"

	"github.com/sivchari/govalid"
	govaliderrors "github.com/sivchari/govalid/validation/errors"
)

var (
	// ErrNilIPv6 is returned when the IPv6 is nil.
	ErrNilIPv6 = errors.New("input IPv6 is nil")

	// ErrIPv6ValueIpv6Validation is returned when the Value fails ipv6 validation.
	ErrIPv6ValueIpv6Validation = govaliderrors.ValidationError{Reason: "field Value failed ipv6 validation", Path: "IPv6.Value", Type: "ipv6"}
)

func ValidateIPv6(t *IPv6) error {
	if t == nil {
		return ErrNilIPv6
	}

	var errs govaliderrors.ValidationErrors

	if ip := net.ParseIP(t.Value); ip == nil || ip.To4() != nil {
		err := ErrIPv6ValueIpv6Validation
		err.Value = t.Value
		errs = append(errs, err)
	}

	{
		t := t.Struct

		if ip := net.ParseIP(t.Value); ip == nil || ip.To4() != nil {
			err := ErrIPv6ValueIpv6Validation
			err.Value = t.Value
			errs = append(errs, err)
		}

	}

	if len(errs) > 0 {
		return errs
	}
	return nil
}

var _ govalid.Validator = (*IPv6)(nil)

func (t *IPv6) Validate() error {
	return ValidateIPv6(t)
}
